# Advanced .NET workflow with better test isolation and reporting
name: .NET Advanced Testing

on:
  push:
    branches: [ "master", "main", "develop" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  TEST_TIMEOUT: '00:10:00'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release --verbosity minimal

    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        dotnet test --no-build --configuration Release \
          --filter "Category=Unit" \
          --logger "console;verbosity=normal" \
          --logger "trx;LogFileName=unit-tests.trx" \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults/Unit

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release --verbosity minimal

    - name: Start test infrastructure
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.tests.yml"
        services: ["redis", "minio"]
        wait-for-tcp: ["6379", "9000"]
        wait-for-tcp-timeout: "60s"

    - name: Wait for services health checks
      run: |
        echo "Waiting for services to be healthy..."
        timeout 60 bash -c 'until docker-compose -f ./docker-compose.tests.yml ps | grep -q "healthy"; do sleep 2; done'

    - name: Run integration tests (excluding E2E)
      run: |
        echo "Running integration tests..."
        dotnet test --no-build --configuration Release \
          --filter "FullyQualifiedName!~EndToEndEmailProcessingTests&Category=Integration" \
          --logger "console;verbosity=normal" \
          --logger "trx;LogFileName=integration-tests.trx" \
          --results-directory ./TestResults/Integration

    - name: Stop test infrastructure
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.tests.yml"
        action: down

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [unit-tests, integration-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release --verbosity minimal

    - name: Start fresh test infrastructure
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.tests.yml"
        services: ["redis", "minio"]
        wait-for-tcp: ["6379", "9000"]
        wait-for-tcp-timeout: "60s"

    - name: Wait for services health checks
      run: |
        echo "Waiting for services to be healthy..."
        timeout 60 bash -c 'until docker-compose -f ./docker-compose.tests.yml ps | grep -q "healthy"; do sleep 2; done'

    - name: Run E2E test
      run: |
        echo "Running E2E test..."
        dotnet test --no-build --configuration Release \
          --filter "FullyQualifiedName~EndToEndEmailProcessingTests" \
          --logger "console;verbosity=normal" \
          --logger "trx;LogFileName=e2e-tests.trx" \
          --results-directory ./TestResults/E2E

    - name: Stop test infrastructure
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.tests.yml"
        action: down

  test-results:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download unit test results
      uses: actions/download-artifact@v4
      if: needs.unit-tests.result == 'success'
      with:
        name: unit-test-results
        path: ./TestResults/Unit

    - name: Download integration test results
      uses: actions/download-artifact@v4
      if: needs.integration-tests.result == 'success'
      with:
        name: integration-test-results
        path: ./TestResults/Integration

    - name: Download E2E test results
      uses: actions/download-artifact@v4
      if: needs.e2e-tests.result == 'success'
      with:
        name: e2e-test-results
        path: ./TestResults/E2E

    - name: Upload all test results
      uses: actions/upload-artifact@v4
      with:
        name: all-test-results
        path: ./TestResults/
        retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Release
      run: dotnet build --no-restore --configuration Release

    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: price-list-processor-build
        path: ./publish/
        retention-days: 30
